syntax = "proto3";

package goload;
option go_package = "grpc/goload;goload";

import "validate/validate.proto";
import "google/api/annotations.proto";

service GoLoadService {
    rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/accounts"
            body: "*"
        };
    }
    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {
        option (google.api.http) = {
            post: "/v1/sessions"
            body: "*"
        };
    }
    rpc CreateDownloadTask(CreateDownloadTaskRequest) returns (CreateDownloadTaskResponse) {}
    rpc GetDownloadTaskList(GetDownloadTaskListRequest) returns (GetDownloadTaskListResponse) {}
    rpc UpdateDownloadTask(UpdateDownloadTaskRequest) returns (UpdateDownloadTaskResponse) {}
    rpc DeleteDownloadTask(DeleteDownloadTaskRequest) returns (DeleteDownloadTaskResponse) {}
    rpc GetDownloadTaskFile(GetDownloadTaskFileRequest) returns (stream GetDownloadTaskFileResponse) {}
}

enum DownloadType {
    UndefinedType = 0;
    HTTP = 1;
}

enum DownloadStatus {
    UndefinedStatus = 0;
    Pending = 1;
    Downloading = 2;
    Failed = 3;
    Success = 4;
}

message Account {
    uint64 id = 1;
    string account_name = 2;
}

message DownloadTask {
    uint64 id = 1;
    Account of_account = 2;
    DownloadType download_type = 3;
    string url = 4;
    DownloadStatus download_status = 5;
}

message CreateAccountRequest {
    string account_name = 1 [(validate.rules).string = {
        pattern:   "^[a-zA-Z0-9]{6,32}$",
    }];
    string password = 2[(validate.rules).string = {
        pattern:   "^[a-zA-Z0-9]{6,32}$",
    }];
}

message CreateAccountResponse {
    uint64 account_id = 1;
}

message CreateSessionRequest {
    string account_name = 1 [(validate.rules).string = {
        pattern:   "^[a-zA-Z0-9]{6,32}$",
    }];
    string password = 2[(validate.rules).string = {
        pattern:   "^[a-zA-Z0-9]{6,32}$",
    }];
}

message CreateSessionResponse {
    Account account = 1;
}

message CreateDownloadTaskRequest {
    string token = 1;
    DownloadType download_type = 2;
    string url = 3 [(validate.rules).string = {
        uri: true,
    }];
}

message CreateDownloadTaskResponse {
    DownloadTask download_task = 1;
}

message GetDownloadTaskListRequest {
    string token = 1;
    uint64 offset = 2;
    uint64 limit = 3 [(validate.rules).uint64 = {
        lte: 100
    }];
}
message GetDownloadTaskListResponse {
    repeated DownloadTask download_task_list = 1;
    uint64 total_download_task_count = 2;
}

message UpdateDownloadTaskRequest {
    string token = 1;
    uint64 download_task_id = 2;
    string url = 3 [(validate.rules).string = {
        uri: true,
    }];
}
message UpdateDownloadTaskResponse {
    uint64 download_task_id = 1;
}

message DeleteDownloadTaskRequest {
    string token = 1;
    uint64 download_task_id = 2;
}

message DeleteDownloadTaskResponse {
    uint64 download_task_id = 1;
}

message GetDownloadTaskFileRequest {
    string token = 1;
    uint64 download_task_id = 2;
}
message GetDownloadTaskFileResponse {
    bytes data = 1;
}